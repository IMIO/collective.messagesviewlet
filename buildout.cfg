[buildout]
extends =
    http://dist.plone.org/release/4.3.11/versions.cfg
    versions.cfg

extensions = mr.developer
parts =
    instance
    omelette
    test
    robot
    coverage
    report
    code-analysis
    releaser
develop = .
show-picked-versions = true

always-checkout = force
auto-checkout +=


[remotes]
coll = https://github.com/collective
coll_push = git@github.com:collective


[sources]


[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on

eggs =
    Plone
    plone.app.workflowmanager
    Pillow
    collective.messagesviewlet
    ipdb
    iw.debug
zcml =
    iw.debug
environment-vars =
    zope_i18n_compile_mo_files true


[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/collective
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette
flake8-max-complexity = 15
flake8-max-line-length = 119
flake8-extensions =
    flake8-blind-except
    flake8-debugger
    flake8-coding


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs =
    ${instance:eggs}
    collective.messagesviewlet [test]
    robotframework-selenium2screenshots
defaults = ['-s', 'collective.messagesviewlet', '--auto-color', '--auto-progress']
environment = testenv


[testenv]
zope_i18n_compile_mo_files = true


[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework[debug,ride,reload]


[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/src/collective/messagesviewlet'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '--all', '-s', 'collective.messagesviewlet']


[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

